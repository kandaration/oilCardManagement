<?php

namespace GestionTransactionBundle\Repository;

/**
 * TransactionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends \Doctrine\ORM\EntityRepository
{
    public function findBydaterange($date1,$date2,$num)
    {
        return $this->createQueryBuilder('tr')
            ->where('(tr.date BETWEEN :d1 AND :d2) AND (tr.carte=:carte)')
            ->setParameter('d1',$date1)
            ->setParameter('d2',$date2)
            ->setParameter('carte',$num)
            ->addOrderBy('tr.date','DESC')
            ->addOrderBy('tr.heure','ASC')
            ->getQuery()
            ->getResult();
    }
 public function findAllThisYearByStation($stat)
    {
        return $this->createQueryBuilder('tr')
            ->select('tr.date,tr.produit AS tProd ,tr.montant AS montantToT')

            ->where('(tr.station=:stat)')
            ->setParameter('stat',$stat)
            //->groupBy('tMonth')
           // ->GroupBy('tProd')


            ->getQuery()
            ->getResult();
    }

    public function findAllTrForGerant($satation)
    {
        return $this->createQueryBuilder('tr')
            ->select('tr.date , SUM( tr.montant) , COUNT(tr.id_transaction)')
            ->where('tr.station=:station')
            ->setParameter('station',$satation)
            ->groupBy('tr.date')
            ->getQuery()
            ->getResult();
    }

    public function findAllTrForGerantPerDay($satation,$date)
    {
        return $this->createQueryBuilder('tr')
            ->select('SUM( tr.montant) , COUNT(tr.id_transaction)')
            ->where('(tr.station=:station) AND (tr.date=:d) ')
            ->setParameter('station',$satation)
            ->setParameter('d',$date)
            ->getQuery()
            ->getResult();
    }

    public function findByday($date,$station)
    {
        return $this->createQueryBuilder('tr')
            ->addSelect('cr')
            ->where('(tr.date=:d1 ) AND (tr.station=:station)')
            ->setParameter('d1',$date)
            ->setParameter('station',$station)
            ->orderBy('tr.heure','ASC')
            ->join('tr.carte','cr')
            ->getQuery()
            ->getResult();
    }

    public function findShiftTrStation($station)
    {
        return $this->createQueryBuilder('tr')
            ->addSelect('cr')
            ->where('tr.station=:station')
            ->setParameter('station',$station)
            ->addOrderBy('tr.date','DESC')
            ->addOrderBy('tr.heure','ASC')
            ->join('tr.carte','cr')
            ->setFirstResult(0)
            ->setMaxResults(10)
            ->getQuery()
            ->getResult();
    }

    public function findShiftTrCarte($num_carte)
    {
        return $this->createQueryBuilder('tr')
            ->addSelect('cr')
            ->where('tr.carte=:carte')
            ->setParameter('carte',$num_carte)
            ->addOrderBy('tr.date','DESC')
            ->addOrderBy('tr.heure','ASC')
            ->join('tr.carte','cr')
            ->setFirstResult(0)
            ->setMaxResults(10)
            ->getQuery()
            ->getResult();
    }

    public function findGerantBydaterange($date1,$date2,$station)
    {
        return $this->createQueryBuilder('tr')
            ->addSelect('cr')
            ->where('(tr.date BETWEEN :d1 AND :d2 ) AND (tr.station=:station)')
            ->setParameter('d1',$date1)
            ->setParameter('d2',$date2)
            ->setParameter('station',$station)
            ->orderBy('tr.heure','ASC')
            ->join('tr.carte','cr')
            ->getQuery()
            ->getResult();
    }
    public function TopCltTrs($date1,$date2,$station)
    {
        return $this->createQueryBuilder('tr')
            ->where('(tr.date BETWEEN :d1 AND :d2 ) AND (tr.station=:station)')
            ->setParameter('d1',$date1)
            ->setParameter('d2',$date2)
            ->setParameter('station',$station)
            ->orderBy('tr.heure','ASC')
            ->getQuery()
            ->getResult();
    }

    public function LitresPerYear($date1,$date2,$clt)
    {
        return $this->createQueryBuilder('tr')
            ->where('(tr.date BETWEEN :d1 AND :d2 ) AND (tr.client=:clt)')
            ->setParameter('d1',$date1)
            ->setParameter('d2',$date2)
            ->setParameter('clt',$clt)
            ->orderBy('tr.heure','ASC')
            ->getQuery()
            ->getResult();
    }

    public function AllMonthProteur_Client($date1,$date2,$carte)
    {
        return $this->createQueryBuilder('tr')
            ->where('(tr.date BETWEEN :d1 AND :d2 ) AND (tr.carte=:carte)')
            ->setParameter('d1',$date1)
            ->setParameter('d2',$date2)
            ->setParameter('carte',$carte)
            ->orderBy('tr.date','ASC')
            ->getQuery()
            ->getResult();
    }
}
